corpusDir: 'corpus' # save the corpus in this directory 
initialize: 'contracts/crytic/init.json' # use this init.json to seed
# testMode: benchmark
# testMode: optimization
testMode: assertion # this is the mode we'll often run it in 
testLimit: 5000 # by default this is 50000, however for writing properties, we may choose to lower it 
shrinkLimit: 500 # this will determine the total number of times to shrink the code 
propMaxGas: 800003000 # this sets a larger property gas limit 
testMaxGas: 800003000
sender: ["0x6A4A62E5A7eD13c361b176A5F62C2eE620Ac0DF8"] # 
filterFunctions: ["EchidnaE2E.createCallback(uint256,uint256,bytes)", "EchidnaE2E.allocateCallback(uint256,uint256,bytes)", "EchidnaE2E.depositCallback(uint256,uint256,bytes)", "EchidnaE2E.swapCallback(uint256,uint256,bytes)","Addresses.d18_d18()", "Addresses.d18_d6()","Addresses.d6()_d18()", "Addresses.d6_d6()"]
timeout: 3600 # 1 hour 
codeSize: 0xfffffffffff #maximize code size 